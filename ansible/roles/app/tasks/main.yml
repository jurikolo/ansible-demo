---
# tasks file for app
- name: Create app directory
  file:
    state: directory
    path: "{{ app_dir }}"
    
- name: Register wildfly directory
  stat:
    path: "{{ wildfly_home }}"
  register: wildfly_home

- name: Download and extract Wildfly archive
  unarchive:
    src: http://download.jboss.org/wildfly/11.0.0.Final/wildfly-11.0.0.Final.tar.gz
    dest: /app
    remote_src: yes
  when: wildfly_home.stat.exists == False

- name: Prepare Wildfly configuration file
  template:
    src: standalone.j2
    dest: "{{ configuration_file }}"
    force: yes
    mode: 0644

- name: Setup startup script
  template:
    src: wildfly.j2
    dest: /app/wildfly.sh
    mode: 0744

- name: Create MySQL module directory
  file:
    state: directory
    path: "{{ db_module_dir }}"

- name: Copy MySQL module jar
  copy:
    src: "{{ role_path }}/files/mysql-connector-java-5.1.45-bin.jar"
    dest: "{{ db_module_dir }}"

- name: Copy MySQL module xml
  copy:
    src: "{{ role_path }}/files/module.xml"
    dest: "{{ db_module_dir }}"

- include_tasks: java.yml
- include_tasks: firewall.yml

- name: Check if Wildfly process is running
  shell: ps aux | grep java | grep wildfly | grep -v grep
  ignore_errors: yes
  changed_when: false
  register: service_wildfly_status

- name: Undeploy application
  jboss:
    deploy_path: "{{ deployments_dir }}"
    deployment: "{{ package_name }}"
    state: absent
  when: "service_wildfly_status.stdout.find('wildfly') > -1"

- name: Shut down wildfly
  command: "{{ jboss_cli }} --connect --controller={{ ansible_eth0.ipv4.address }}:9990 command=:shutdown"
  when: "service_wildfly_status.stdout.find('wildfly') > -1"

- name: Pause execution due to Wildfly is shutting down
  pause:
    minutes: 1
  when: "service_wildfly_status.stdout.find('wildfly') > -1"

- name: Remove deployments directory
  file:
    state: absent
    path: "{{ deployments_dir }}"

- name: Revert deployments directory
  file:
    state: directory
    path: "{{ deployments_dir }}"

#- name: Deploy artifact
#  maven_artifact:
#    group_id: com.tele2.cn.t2prov.projects.t2prov-mobsoap
#    artifact_id: mobsoap-web
#    extension: war
#    repository_url: 'http://nexus.tele2.net:8081/nexus/content/repositories/snapshots'
#    dest: "{{ package }}"

- name: Deploy artifact
  copy:
    src: "{{ role_path }}/files/testServlet-1.0.0.war"
    dest: "{{ deployments_dir }}"

- name: Startup wildfly
  command: /app/wildfly.sh
  args:
    chdir: /app